# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec gnome-terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+o split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+w fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+f focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ide "1 "
set $internet "2 "
set $media "3 "
set $terminal "4  "
set $file "5 "
set $git "6 "
set $tool "7 "
set $ws8 "8"
set $ws9 "9"
set $chat "10 "

# switch to workspace
bindsym $mod+1 workspace $ide
bindsym $mod+2 workspace $internet
bindsym $mod+3 workspace $media
bindsym $mod+4 workspace $terminal
bindsym $mod+5 workspace $file
bindsym $mod+6 workspace $git
bindsym $mod+7 workspace $tool
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $chat

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ide
bindsym $mod+Shift+2 move container to workspace $internet
bindsym $mod+Shift+3 move container to workspace $media
bindsym $mod+Shift+4 move container to workspace $terminal
bindsym $mod+Shift+5 move container to workspace $file
bindsym $mod+Shift+6 move container to workspace $git
bindsym $mod+Shift+7 move container to workspace $tool
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $chat

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# suspend
bindsym --release $mod+Shift+s exec "systemctl suspend"
# shutdown
bindsym --release $mod+Shift+o exec "i3-nagbar -t warning -m 'You pressed the poweroff shortcut. Do you really want to power off this computer?' -B 'Yes, poweroff' 'poweroff'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

#keyboard
exec "setxkbmap -layout it"

#screeenshot
bindsym --release Print exec "scrot -q 100 ~/Pictures/screen/scrn_%Y%m%d_%H%M%S.png"
bindsym --release Shift+Print exec "scrot --select -q 100 ~/Pictures/screen/scrn_%Y%m%d_%H%M%S.png"
bindsym --release Control+Print exec "scrot --focused -q 100 ~/Pictures/screen/scrn_%Y%m%d_%H%M%S.png"
bindsym $mod+Print exec "printf '~/Pictures/screen/%s'$(ls ~/Pictures/screen/ | tail -n 1)'\n' | gthumb"

#monitor
exec "~/prog/dotfiles/script/screen/./screen.sh r"
bindsym $mod+m exec "~/prog/dotfiles/script/screen/./screen.sh s"

# monitor names
set $m1 DisplayPort-1
set $m2 HDMI-A-0

# monitor to workspace
workspace $ide output $m1
workspace $internet output $m2
workspace $media output $m2
bindsym $mod+Ctrl+j move workspace to output $m1
bindsym $mod+Ctrl+k move workspace to output $m2

# background
exec "bash ~/prog/dotfiles/script/background/sh"
exec "bash ~/prog/dotfiles/script/update.sh"
exec --no-startup-id i3-msg 'workspace $internet; exec /usr/bin/syncthing'
exec --no-startup-id i3-msg 'workspace $media; exec /usr/bin/firefox --new-window https://www.youtube.com/'
exec --no-startup-id i3-msg 'workspace $internet; exec /usr/bin/firefox --new-window'
exec --no-startup-id i3-msg 'workspace $terminal; exec /usr/bin/gnome-terminal -- fish --init-command=neofetch'
exec --no-startup-id i3-msg 'workspace $file; exec /usr/bin/gnome-terminal -- nnn'

# default workspaces
assign [class="QtCreator"] $ide
assign [class="Eclipse"] $ide
assign [class="whats-app-nativefier-d52542"] $chat

#floating windows
for_window [instance="qt-ts-csv"] floating enable
for_window [instance="whats-app-nativefier-d52542"] floating enable

# start programs
exec "whatsapp-nativefier"
